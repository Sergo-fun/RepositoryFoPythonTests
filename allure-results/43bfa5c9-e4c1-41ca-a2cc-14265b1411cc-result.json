{"name": "Удаление пользователя с корректным запросом", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} is None\n +  where {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} = <built-in method get of dict object at 0x000001B0F3BEF280>('data')\n +    where <built-in method get of dict object at 0x000001B0F3BEF280> = {'data': {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...}, 'support': {'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.', 'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral'}}.get", "trace": "@allure.suite(\"DELETE User API\")\n    @allure.title(\"Удаление пользователя с корректным запросом\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_delete_user():\n        with allure.step(\"Отправить DELETE-запрос для удаления пользователя\"):\n            response = httpx.delete(BASE_URL + DELETE_USER)\n    \n        with allure.step(\"Проверить статус-код ответа\"):\n            assert response.status_code == 204\n    \n        with allure.step(\"Попытка удалить несуществующего пользователя\"):\n            response = httpx.delete(BASE_URL + \"api/users/999\")\n            assert response.status_code == 204\n    \n        with allure.step(\"Проверить, что пользователь не существует\"):\n            response = httpx.get(BASE_URL + GET_USER)\n            # Вместо 404 можно проверить, что данные пользователя не возвращаются\n            assert response.status_code == 200\n            response_json = response.json()\n>           assert response_json.get('data') is None\nE           AssertionError: assert {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} is None\nE            +  where {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} = <built-in method get of dict object at 0x000001B0F3BEF280>('data')\nE            +    where <built-in method get of dict object at 0x000001B0F3BEF280> = {'data': {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...}, 'support': {'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.', 'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral'}}.get\n\ntests\\test_delete_user_data.py:28: AssertionError"}, "steps": [{"name": "Отправить DELETE-запрос для удаления пользователя", "status": "passed", "start": 1738096747628, "stop": 1738096748274}, {"name": "Проверить статус-код ответа", "status": "passed", "start": 1738096748274, "stop": 1738096748274}, {"name": "Попытка удалить несуществующего пользователя", "status": "passed", "start": 1738096748274, "stop": 1738096748778}, {"name": "Проверить, что пользователь не существует", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} is None\n +  where {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} = <built-in method get of dict object at 0x000001B0F3BEF280>('data')\n +    where <built-in method get of dict object at 0x000001B0F3BEF280> = {'data': {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...}, 'support': {'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.', 'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral'}}.get\n", "trace": "  File \"D:\\Python\\tests\\test_delete_user_data.py\", line 28, in test_delete_user\n    assert response_json.get('data') is None\n"}, "start": 1738096748779, "stop": 1738096749299}], "start": 1738096747628, "stop": 1738096749301, "uuid": "4ab28f81-de7c-4295-9123-94d39fe9a165", "historyId": "82ca3e1edc8725139fd9a7233705f2fb", "testCaseId": "82ca3e1edc8725139fd9a7233705f2fb", "fullName": "tests.test_delete_user_data#test_delete_user", "labels": [{"name": "suite", "value": "DELETE User API"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "LAPTOP-LSAVBAAG"}, {"name": "thread", "value": "20264-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_delete_user_data"}]}