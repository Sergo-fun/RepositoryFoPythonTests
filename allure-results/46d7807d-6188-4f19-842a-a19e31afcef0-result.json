{"name": "Удаление пользователя с корректным запросом", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} is None\n +  where {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} = <built-in method get of dict object at 0x0000027CAC734200>('data')\n +    where <built-in method get of dict object at 0x0000027CAC734200> = {'data': {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...}, 'support': {'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.', 'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral'}}.get", "trace": "@allure.suite(\"DELETE User API\")\n    @allure.title(\"Удаление пользователя с корректным запросом\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_delete_user():\n        # Шаг 1: Отправить DELETE-запрос для удаления пользователя\n        with allure.step(\"Отправить DELETE-запрос для удаления пользователя\"):\n            response = httpx.delete(BASE_URL + DELETE_USER)\n    \n        # Шаг 2: Проверить статус-код ответа на успешное удаление\n        with allure.step(\"Проверить статус-код ответа\"):\n            assert response.status_code == 204\n    \n        # Шаг 3: Проверить, что пользователя больше не существует\n        with allure.step(\"Проверить, что пользователь не существует\"):\n            response = httpx.get(BASE_URL + GET_USER)\n            # Вместо 404 можно проверить, что данные пользователя не возвращаются\n            assert response.status_code == 200\n            response_json = response.json()\n>           assert response_json.get('data') is None  # Если данные отсутствуют, то мы убедились, что пользователя нет\nE           AssertionError: assert {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} is None\nE            +  where {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} = <built-in method get of dict object at 0x0000027CAC734200>('data')\nE            +    where <built-in method get of dict object at 0x0000027CAC734200> = {'data': {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...}, 'support': {'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.', 'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral'}}.get\n\ntests\\test_delete_user_data.py:26: AssertionError"}, "steps": [{"name": "Отправить DELETE-запрос для удаления пользователя", "status": "passed", "start": 1738096586151, "stop": 1738096586763}, {"name": "Проверить статус-код ответа", "status": "passed", "start": 1738096586763, "stop": 1738096586763}, {"name": "Проверить, что пользователь не существует", "status": "failed", "statusDetails": {"message": "AssertionError: assert {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} is None\n +  where {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...} = <built-in method get of dict object at 0x0000027CAC734200>('data')\n +    where <built-in method get of dict object at 0x0000027CAC734200> = {'data': {'avatar': 'https://reqres.in/img/faces/2-image.jpg', 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'id': 2, ...}, 'support': {'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.', 'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral'}}.get\n", "trace": "  File \"D:\\Python\\tests\\test_delete_user_data.py\", line 26, in test_delete_user\n    assert response_json.get('data') is None  # Если данные отсутствуют, то мы убедились, что пользователя нет\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1738096586763, "stop": 1738096587210}], "start": 1738096586151, "stop": 1738096587213, "uuid": "9d9530eb-50fb-499b-9ecd-5490ae29f9e7", "historyId": "82ca3e1edc8725139fd9a7233705f2fb", "testCaseId": "82ca3e1edc8725139fd9a7233705f2fb", "fullName": "tests.test_delete_user_data#test_delete_user", "labels": [{"name": "suite", "value": "DELETE User API"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "LAPTOP-LSAVBAAG"}, {"name": "thread", "value": "16824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_delete_user_data"}]}